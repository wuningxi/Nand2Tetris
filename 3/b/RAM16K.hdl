// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Split address into two parts: Use 1st part of address to choose correct register block, 2nd part to choose register
    DMux4Way(in=load,sel=address[12..13],a=load0,b=load1,c=load2,d=load3); 

    // Using 4 RAM blocks (with 4K registers each) - each address has 12 bits
    RAM4K(in=in,load=load0,address=address[0..11],out=regblock0);
    RAM4K(in=in,load=load1,address=address[0..11],out=regblock1);
    RAM4K(in=in,load=load2,address=address[0..11],out=regblock2);
    RAM4K(in=in,load=load3,address=address[0..11],out=regblock3);

    Mux4Way16(a=regblock0,b=regblock1,c=regblock2,d=regblock3,sel=address[12..13],out=out);
}
